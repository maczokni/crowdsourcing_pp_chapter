ggplot(data = atl) +
geom_sf() +
theme_void() +
coord_sf(xlim = c(-83.7, -85), ylim = c(33.2, 34.5), expand = FALSE) +
geom_sf(data = points_atl_s) #visualise points on the map
View(head(points_atl_s))
points_atl_s_nhood <- st_intersection(atl, points_atl_s) %>%
group_by(NAME) %>%
summarise(winscore = mean(win, na.rm = TRUE))
View(points_atl_s_nhood)
atl_pp_wins <- left_join(atl, points_atl_s_nhood, by = c("NAME" == "NAME"))
st_geometry(points_atl_s_nhood) <- NULL
atl_pp_wins <- left_join(atl, points_atl_s_nhood, by = c("NAME" == "NAME"))
atl_pp_wins <- left_join(atl, points_atl_s_nhood, by = c("NAME" = "NAME"))
ggplot(data = atl) +
geom_sf(aes(fill = winscore)) +
theme_void() +
coord_sf(xlim = c(-83.7, -85), ylim = c(33.2, 34.5), expand = FALSE)
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
theme_void() +
coord_sf(xlim = c(-83.7, -85), ylim = c(33.2, 34.5), expand = FALSE)
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
theme_void()
geom_sf(data = points_atl_s) #visualise points on the map
ggplot(data = atl) +
geom_sf() +
theme_void() +
geom_sf(data = points_atl_s) #visualise points on the map
summary(atl_pp_wins$winscore) #descriptive statistics of proportion of 'safer' votes per tract
points_atl_s_nhood <- st_intersection(atl, points_atl_s) %>%
group_by(NAME) %>%
summarise(winscore = mean(win, na.rm = TRUE),
num_votes = n())
st_geometry(points_atl_s_nhood) <- NULL
atl_pp_wins <- left_join(atl, points_atl_s_nhood, by = c("NAME" = "NAME"))
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
theme_void()
summary(atl_pp_wins$winscore) #descriptive statistics of proportion of 'safer' votes per tract
summary(Votes_areas$n)
summary(atl_pp_wins$num_votes)
library(ggplot2)
library(sf)
library(ineq)
library(dplyr)
library(lubridate)
View(head(PP_data$day))
by_day <- pp_data %>%
group_by(ymd(day)) %>%
summarise(num_votes = n()) %>%
complete(day = seq.Date(min(day), max(day), by="day"))
??complete
library(survival)
by_day <- pp_data %>%
group_by(ymd(day)) %>%
summarise(num_votes = n()) %>%
complete(day = seq.Date(min(day), max(day), by="day"))
by_day <- pp_data %>%
group_by(ymd(day)) %>%
summarise(num_votes = n()) %>%
survival::complete(day = seq.Date(min(day), max(day), by="day"))
library(tidyr)
by_day <- pp_data %>%
group_by(ymd(day)) %>%
summarise(num_votes = n()) %>%
complete(day = seq.Date(min(day), max(day), by="day"))
by_day <- pp_data %>%
mutate(day = ymd(day)) %>%
group_by(day) %>%
summarise(num_votes = n()) %>%
complete(day = seq.Date(min(day), max(day), by="day"))
View(by_day)
by_day <- pp_data %>%
mutate(day = ymd(day)) %>%
group_by(day) %>%
summarise(num_votes = n()) %>%
complete(day = seq.Date(min(day), max(day), by="day")) %>%
fill(0)
by_day <- pp_data %>%
mutate(day = ymd(day)) %>%
group_by(day) %>%
summarise(num_votes = n()) %>%
complete(day = seq.Date(min(day), max(day), by="day")) %>%
replace_na(0)
by_day <- pp_data %>%
mutate(day = ymd(day)) %>%
group_by(day) %>%
summarise(num_votes = n()) %>%
complete(day = seq.Date(min(day), max(day), by="day")) %>%
mutate(num_votes = replace_na(num_votes, 0))
by_day <- pp_data %>%
mutate(day = ymd(day)) %>%
group_by(day) %>%
summarise(num_votes = n()) %>%
complete(day = seq.Date(min(day), max(day), by="day")) %>%
mutate(num_votes = replace_na(num_votes, 0))
by_day <- pp_data %>%
mutate(day = ymd(day)) %>%
group_by(day) %>%
summarise(num_votes = n()) %>%
complete(day = seq.Date(min(day), max(day), by="day")) %>%
mutate(num_votes = replace_na(num_votes, 0))
ggplot(by_day, aes(x = day, y = num_votes)) +
geom_line() +
geom_smooth(lwd = 1.5, col = "red") +
theme_bw() +
xlab("Days since website launch") +
ylab("Number of votes")
PP_data <- read.csv('https://ndownloader.figshare.com/files/21739137') #this may take some minutes
Voter <- table(PP_data$voter_uniqueid) #create table of number of votes per participant
Voter <- as.data.frame(Voter) #convert table into dataframe
Voter_top1 <- subset(Voter, Freq > quantile(Freq, prob = 1 - 1/100)) #subset top 1% participants
sum(Voter_top1$Freq) / sum(Voter$Freq) * 100 #Proportion of votes by top 1% participants
PP_data <- read.csv('https://ndownloader.figshare.com/files/21739137') #this may take some minutes
tinytex::install_tinytex()
library(ggplot2)
library(sf)
library(sf)
library(ineq)
library(sf)
library(ineq)
library(dplyr)
library(lubridate)
library(tidyr)
pp_data <- read.csv('https://ndownloader.figshare.com/files/21739137')
top_n(count(pp_data$place_name_left), 5)
View(pp_data)
top_n(count(pp_data$place_name_left), 5)
count(pp_data$place_name_left)
top_n(table(pp_data$place_name_left), 5)
table(pp_data$place_name_left)
top_n(table(pp_data$place_name_left), 5, 2)
top_n(as.data.frame(table(pp_data$place_name_left)), 5)
top_n(as.data.frame(table(pp_data$place_name_left)), 5)
top_n(as.data.frame(table(pp_data$place_name_left)), 5, "Freq")
top_n(as.data.frame(table(pp_data$place_name_left)), 5, 2)
top_n(as.data.frame(table(pp_data$place_name_left)), 5)
top_n(as.data.frame(table(pp_data$place_name_left)), 5, wt = "Freq")
top_n(as.data.frame(table(pp_data$place_name_left)), 5)
top_n(as.data.frame(table(pp_data$place_name_right)), 5)
count(pp_data$study_question)
table(pp_data$study_question)
top_n(as.data.frame(table(pp_data$choice)), 3)
pp_atl <- pp_data[which(pp_data$place_name_right == "Atlanta" | pp_data$place_name_left == "Atlanta"), ]
Let's also focus on the ratings of areas as safer, as we are interested in people's perceptions of the environment:
```{r getsafetyq}
pp_atl_s <- pp_atl[ which(pp_atl$study_question == "safer"), ]
table(pp_atl_s$place_name_right == "Atlanta" & pp_atl_s$place_name_left == "Atlanta") #count votes in which both images are from Atlanta
pp_atl_s <- pp_atl_s[order(pp_atl_s$X), ] #order file by vote number
pp_atl_s_dup <- pp_atl_s[which(pp_atl_s$place_name_right == "Atlanta" & pp_atl_s$place_name_left == "Atlanta"), ] #create new dataset of votes in which both images are from Atlanta (We will duplicate them)
pp_atl_s_dup2 <- pp_atl_s_dup
pp_atl_s <- pp_atl_s[!(pp_atl_s$X %in% pp_atl_s_dup$X),]
pp_atl_s$long_Atl[pp_atl_s$place_name_left == "Atlanta"] <- pp_atl_s$long_left[pp_atl_s$place_name_left == "Atlanta"] #allocate coordinates to votes in which left image is from Atlanta
pp_atl_s$lat_Atl[pp_atl_s$place_name_left == "Atlanta"] <- pp_atl_s$lat_left[pp_atl_s$place_name_left == "Atlanta"]
View(pp_atl_s)
pp_atl_s <- pp_atl_s[order(pp_atl_s$X), ] #order file by vote number
pp_atl <- pp_data[which(pp_data$place_name_right == "Atlanta" | pp_data$place_name_left == "Atlanta"), ]
pp_atl_s <- pp_atl[ which(pp_atl$study_question == "safer"), ]
pp_atl_s <- pp_atl_s[order(pp_atl_s$X), ] #order file by vote number
pp_atl_s_dup <- pp_atl_s[which(pp_atl_s$place_name_right == "Atlanta" & pp_atl_s$place_name_left == "Atlanta"), ] #new dataset: both images are from Atlanta
pp_atl_s_dup2 <- pp_atl_s_dup #duplicate new dataset
pp_atl_s <- pp_atl_s[!(pp_atl_s$X %in% pp_atl_s_dup$X),] #delete cases in which both votes are from Atlanta from main dataset
pp_atl_s$long_Atl[pp_atl_s$place_name_left == "Atlanta"] <- pp_atl_s$long_left[pp_atl_s$place_name_left == "Atlanta"] #allocate coordinates to votes in which left image is from Atlanta
pp_atl_s$lat_Atl[pp_atl_s$place_name_left == "Atlanta"] <- pp_atl_s$lat_left[pp_atl_s$place_name_left == "Atlanta"]
pp_atl_s_dup$long_Atl[pp_atl_s_dup$place_name_left == "Atlanta"] <- pp_atl_s_dup$long_left[pp_atl_s_dup$place_name_left == "Atlanta"]
pp_atl_s_dup$lat_Atl[pp_atl_s_dup$place_name_left == "Atlanta"] <- pp_atl_s_dup$lat_left[pp_atl_s_dup$place_name_left == "Atlanta"]
pp_atl_s <- pp_atl[ which(pp_atl$study_question == "safer"), ]
pp_atl_s <- pp_atl_s[order(pp_atl_s$X), ] #order file by vote number
pp_atl_s_dup <- pp_atl_s[which(pp_atl_s$place_name_right == "Atlanta" & pp_atl_s$place_name_left == "Atlanta"), ] #new dataset: both images are from Atlanta
pp_atl_s_dup2 <- pp_atl_s_dup #duplicate new dataset
pp_atl_s <- pp_atl_s[!(pp_atl_s$X %in% pp_atl_s_dup$X),] #delete cases in which both votes are from Atlanta from main dataset
pp_atl_s$long_Atl[pp_atl_s$place_name_left == "Atlanta"] <- pp_atl_s$long_left[pp_atl_s$place_name_left == "Atlanta"]
pp_atl_s$lat_Atl[pp_atl_s$place_name_left == "Atlanta"] <- pp_atl_s$lat_left[pp_atl_s$place_name_left == "Atlanta"]
pp_atl_s$long_Atl[pp_atl_s$place_name_right == "Atlanta"] <- pp_atl_s$long_right[pp_atl_s$place_name_right == "Atlanta"]
pp_atl_s$lat_Atl[pp_atl_s$place_name_right == "Atlanta"] <- pp_atl_s$lat_right[pp_atl_s$place_name_right == "Atlanta"]
pp_atl_s_dup$long_Atl <- pp_atl_s_dup$long_left
pp_atl_s_dup$lat_Atl <- pp_atl_s_dup$lat_left
pp_atl_s_dup2$long_Atl <- pp_atl_s_dup2$long_right
pp_atl_s_dup2$lat_Atl <- pp_atl_s_dup2$lat_right
pp_atl_s$win[pp_atl_s$place_id_left == "Atlanta" & pp_atl_s$choice == "left"] <- 1
pp_atl_s$win[pp_atl_s$place_id_left == "Atlanta" & pp_atl_s$choice == "right"] <- 0
pp_atl_s$win[pp_atl_s$place_id_right == "Atlanta" & pp_atl_s$choice == "right"] <- 1
pp_atl_s$win[pp_atl_s$place_id_right == "Atlanta" & pp_atl_s$choice == "left"] <- 0
table(pp_atl_s$win)
View(pp_atl_s)
View(pp_atl)
View(pp_atl_s)
pp_atl_s$win[pp_atl_s$place_name_left == "Atlanta" & pp_atl_s$choice == "left"] <- 1
pp_atl_s$win[pp_atl_s$place_name_left == "Atlanta" & pp_atl_s$choice == "right"] <- 0
pp_atl_s$win[pp_atl_s$place_name_right == "Atlanta" & pp_atl_s$choice == "right"] <- 1
pp_atl_s$win[pp_atl_s$place_name_right == "Atlanta" & pp_atl_s$choice == "left"] <- 0
table(pp_atl_s$win)
pp_atl_s$win[pp_atl_s$place_name_left == "Atlanta" & pp_atl_s$choice == "equal"] <- 0
pp_atl_s$win[pp_atl_s$place_name_left == "Atlanta" & pp_atl_s$choice == "left"] <- 1
pp_atl_s$win[pp_atl_s$place_name_left == "Atlanta" & pp_atl_s$choice == "right"] <- 0
pp_atl_s$win[pp_atl_s$place_name_left == "Atlanta" & pp_atl_s$choice == "equal"] <- 0
pp_atl_s$win[pp_atl_s$place_name_right == "Atlanta" & pp_atl_s$choice == "right"] <- 1
pp_atl_s$win[pp_atl_s$place_name_right == "Atlanta" & pp_atl_s$choice == "left"] <- 0
pp_atl_s$win[pp_atl_s$place_name_right == "Atlanta" & pp_atl_s$choice == "equal"] <- 0
table(pp_atl_s$win)
pp_atl_s$win[pp_atl_s$place_name_left == "Atlanta" & pp_atl_s$choice == "left"] <- 1
pp_atl_s$win[pp_atl_s$place_name_left == "Atlanta" & pp_atl_s$choice == "right"] <- 0
pp_atl_s$win[pp_atl_s$place_name_left == "Atlanta" & pp_atl_s$choice == "equal"] <- 0
pp_atl_s$win[pp_atl_s$place_name_right == "Atlanta" & pp_atl_s$choice == "right"] <- 1
pp_atl_s$win[pp_atl_s$place_name_right == "Atlanta" & pp_atl_s$choice == "left"] <- 0
pp_atl_s$win[pp_atl_s$place_name_right == "Atlanta" & pp_atl_s$choice == "equal"] <- 0
pp_atl_s_dup$win[pp_atl_s_dup == "left"] <- 1
pp_atl_s_dup$win[pp_atl_s_dup == "right"] <- 0
pp_atl_s_dup$win[pp_atl_s_dup == "equal"] <- 0
pp_atl_s_dup2$win[pp_atl_s_dup == "right"] <- 1
pp_atl_s$win[pp_atl_s$place_name_left == "Atlanta" & pp_atl_s$choice == "left"] <- 1
pp_atl_s$win[pp_atl_s$place_name_left == "Atlanta" & pp_atl_s$choice == "right"] <- 0
pp_atl_s$win[pp_atl_s$place_name_left == "Atlanta" & pp_atl_s$choice == "equal"] <- 0
pp_atl_s$win[pp_atl_s$place_name_right == "Atlanta" & pp_atl_s$choice == "right"] <- 1
pp_atl_s$win[pp_atl_s$place_name_right == "Atlanta" & pp_atl_s$choice == "left"] <- 0
pp_atl_s$win[pp_atl_s$place_name_right == "Atlanta" & pp_atl_s$choice == "equal"] <- 0
pp_atl_s_dup$win[pp_atl_s_dup$choice == "left"] <- 1
pp_atl_s_dup$win[pp_atl_s_dup$choice == "right"] <- 0
pp_atl_s_dup$win[pp_atl_s_dup$choice == "equal"] <- 0
pp_atl_s_dup2$win[pp_atl_s_dup$choice == "right"] <- 1
pp_atl_s_dup2$win[pp_atl_s_dup$choice == "left"] <- 0
pp_atl_s_dup2$win[pp_atl_s_dup$choice == "equal"] <- 0
pp_atl_s <- rbind(pp_atl_s, pp_atl_s_dup, pp_atl_s_dup2) #merge duplicated cases where both images are from Atlanta
table(pp_atl_s$win)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(ggplot2)
library(sf)
library(ineq)
library(lubridate)
library(tidyr)
library(dplyr)
tbl_df(pp_data) %>%
group_by(place_name_left) %>%
tally(G) %>%
top_n(5)
tbl_df(pp_data) %>%
group_by(place_name_left) %>%
top_n(5)
pp_data %>%
group_by(place_name_left) %>%
top_n(5)
pp_data %>%
group_by(place_name_left) %>%
summarize(Count = n()) %>%
top_n(5)
pp_data %>%
group_by(place_name_left) %>%
summarize(Count = n()) %>%
top_n(5)
pp_data %>%
group_by(place_name_right) %>%
summarize(Count = n()) %>%
top_n(5)
pp_data %>%
group_by(place_name_left) %>%
summarize(Count = n()) %>%
top_n(5)
pp_data %>%
group_by(study_question)) %>%
pp_data %>%
group_by(study_question) %>%
summarize(Count = n())
table(pp_data$study_question)
pp_data %>%
group_by(choice) %>%
summarize(Count = n()) %>%
top_n(3)
pp_data %>%
group_by(place_name_right) %>%
summarize(Count = n()) %>%
top_n(5)
pp_data %>%
group_by(study_question) %>%
summarize(Count = n())
pp_data %>%
group_by(choice) %>%
summarize(Count = n()) %>%
top_n(3)
pp_atl <- pp_data[which(pp_data$place_name_right == "Atlanta" | pp_data$place_name_left == "Atlanta"), ]
pp_atl_s <- pp_atl[ which(pp_atl$study_question == "safer"), ]
table(pp_atl_s$place_name_right == "Atlanta" & pp_atl_s$place_name_left == "Atlanta") #count votes in which both images are from Atlanta
pp_atl_s <- pp_atl_s[order(pp_atl_s$X), ] #order file by vote number
pp_atl_s_dup <- pp_atl_s[which(pp_atl_s$place_name_right == "Atlanta" & pp_atl_s$place_name_left == "Atlanta"), ] #new dataset: both images are from Atlanta
pp_atl_s_dup2 <- pp_atl_s_dup #duplicate new dataset
pp_atl_s <- pp_atl_s[!(pp_atl_s$X %in% pp_atl_s_dup$X), ] #delete duplicated votes from main dataset
pp_atl_s$long_Atl[pp_atl_s$place_name_right == "Atlanta"] <- pp_atl_s$long_right[pp_atl_s$place_name_right == "Atlanta"]
pp_atl_s$lat_Atl[pp_atl_s$place_name_right == "Atlanta"] <- pp_atl_s$lat_right[pp_atl_s$place_name_right == "Atlanta"]
pp_atl_s_dup$long_Atl <- pp_atl_s_dup$long_left
pp_atl_s_dup$lat_Atl <- pp_atl_s_dup$lat_left
pp_atl_s_dup2$long_Atl <- pp_atl_s_dup2$long_right
pp_atl_s_dup2$lat_Atl <- pp_atl_s_dup2$lat_right
pp_atl_s$win[pp_atl_s$place_name_left == "Atlanta" & pp_atl_s$choice == "left"] <- 1
pp_atl_s$win[pp_atl_s$place_name_left == "Atlanta" & pp_atl_s$choice == "right"] <- 0
pp_atl_s$win[pp_atl_s$place_name_left == "Atlanta" & pp_atl_s$choice == "equal"] <- 0
pp_atl_s$win[pp_atl_s$place_name_right == "Atlanta" & pp_atl_s$choice == "right"] <- 1
pp_atl_s$win[pp_atl_s$place_name_right == "Atlanta" & pp_atl_s$choice == "left"] <- 0
pp_atl_s$win[pp_atl_s$place_name_right == "Atlanta" & pp_atl_s$choice == "equal"] <- 0
pp_atl_s_dup$win[pp_atl_s_dup$choice == "left"] <- 1
pp_atl_s_dup$win[pp_atl_s_dup$choice == "right"] <- 0
pp_atl_s_dup$win[pp_atl_s_dup$choice == "equal"] <- 0
pp_atl_s_dup2$win[pp_atl_s_dup$choice == "right"] <- 1
pp_atl_s_dup2$win[pp_atl_s_dup$choice == "left"] <- 0
pp_atl_s_dup2$win[pp_atl_s_dup$choice == "equal"] <- 0
pp_atl_s <- rbind(pp_atl_s, pp_atl_s_dup, pp_atl_s_dup2)
atl <- st_read("http://worldmap.harvard.edu/download/wfs/1824/json?outputFormat=json&service=WFS&request=GetFeature&format_options=charset%3AUTF-8&typename=geonode%3AAtlanta_Census_Tracts_SHL&version=1.0.0")
plot(st_geometry(atl))
points_atl_s <- st_as_sf(pp_atl_s, coords = c("lat_Atl", "long_Atl")) #geocode 'safe' votes in Atlanta
View(pp_atl_s)
pp_atl <- pp_data[which(pp_data$place_name_right == "Atlanta" | pp_data$place_name_left == "Atlanta"), ]
pp_atl_s <- pp_atl[ which(pp_atl$study_question == "safer"), ]
table(pp_atl_s$place_name_right == "Atlanta" & pp_atl_s$place_name_left == "Atlanta") #count votes in which both images are from Atlanta
pp_atl_s <- pp_atl_s[order(pp_atl_s$X), ] #order file by vote number
pp_atl_s_dup <- pp_atl_s[which(pp_atl_s$place_name_right == "Atlanta" & pp_atl_s$place_name_left == "Atlanta"), ] #new dataset: both images are from Atlanta
pp_atl_s_dup2 <- pp_atl_s_dup #duplicate new dataset
pp_atl_s <- pp_atl_s[!(pp_atl_s$X %in% pp_atl_s_dup$X), ] #delete duplicated votes from main dataset
pp_atl_s$long_Atl[pp_atl_s$place_name_left == "Atlanta"] <- pp_atl_s$long_left[pp_atl_s$place_name_left == "Atlanta"]
pp_atl_s$lat_Atl[pp_atl_s$place_name_left == "Atlanta"] <- pp_atl_s$lat_left[pp_atl_s$place_name_left == "Atlanta"]
pp_atl_s$long_Atl[pp_atl_s$place_name_right == "Atlanta"] <- pp_atl_s$long_right[pp_atl_s$place_name_right == "Atlanta"]
pp_atl_s$lat_Atl[pp_atl_s$place_name_right == "Atlanta"] <- pp_atl_s$lat_right[pp_atl_s$place_name_right == "Atlanta"]
pp_atl_s_dup$long_Atl <- pp_atl_s_dup$long_left
pp_atl_s_dup$lat_Atl <- pp_atl_s_dup$lat_left
pp_atl_s_dup2$long_Atl <- pp_atl_s_dup2$long_right
pp_atl_s_dup2$lat_Atl <- pp_atl_s_dup2$lat_right
pp_atl_s$win[pp_atl_s$place_name_left == "Atlanta" & pp_atl_s$choice == "left"] <- 1
pp_atl_s$win[pp_atl_s$place_name_left == "Atlanta" & pp_atl_s$choice == "right"] <- 0
pp_atl_s$win[pp_atl_s$place_name_left == "Atlanta" & pp_atl_s$choice == "equal"] <- 0
pp_atl_s$win[pp_atl_s$place_name_right == "Atlanta" & pp_atl_s$choice == "right"] <- 1
pp_atl_s$win[pp_atl_s$place_name_right == "Atlanta" & pp_atl_s$choice == "left"] <- 0
pp_atl_s$win[pp_atl_s$place_name_right == "Atlanta" & pp_atl_s$choice == "equal"] <- 0
pp_atl_s_dup$win[pp_atl_s_dup$choice == "left"] <- 1
pp_atl_s_dup$win[pp_atl_s_dup$choice == "right"] <- 0
pp_atl_s_dup$win[pp_atl_s_dup$choice == "equal"] <- 0
pp_atl_s_dup2$win[pp_atl_s_dup$choice == "right"] <- 1
pp_atl_s_dup2$win[pp_atl_s_dup$choice == "left"] <- 0
pp_atl_s_dup2$win[pp_atl_s_dup$choice == "equal"] <- 0
pp_atl_s <- rbind(pp_atl_s, pp_atl_s_dup, pp_atl_s_dup2)
View(pp_atl_s)
plot(st_geometry(atl))
points_atl_s <- st_as_sf(pp_atl_s, coords = c("lat_Atl", "long_Atl")) #geocode 'safe' votes in Atlanta
```{r checkcrs}
st_crs(points_atl_s) == st_crs(atl) #check if coordinate reference system is the same of both layers
```
```{r changecrs}
st_crs(points_atl_s) <- st_crs(atl)
```{r checkcrs2}
st_crs(points_atl_s) == st_crs(atl) #check if coordinate reference system is the same of both layers
```
ggplot(data = atl) +
geom_sf() +
theme_void() +
geom_sf(data = points_atl_s) #visualise points on the map
ggplot(data = atl) +
geom_sf() +
theme_void() +
coord_sf(xlim = c(-83.7, -85), ylim = c(33.2, 34.5), expand = FALSE) +
geom_sf(data = points_atl_s) #visualise points on the map
ggplot(data = atl) +
theme_void() +
geom_sf(data = points_atl_s) #visualise points on the map
ggplot(data = atl) +
geom_sf() +
theme_void() +
geom_sf(data = points_atl_s) #visualise points on the map
ggplot(data = atl) +
geom_sf() +
theme_void() +
geom_sf(data = points_atl_s) #visualise points on the map
atl <- st_read("http://worldmap.harvard.edu/download/wfs/1824/json?outputFormat=json&service=WFS&request=GetFeature&format_options=charset%3AUTF-8&typename=geonode%3AAtlanta_Census_Tracts_SHL&version=1.0.0")
plot(st_geometry(atl))
points_atl_s <- st_as_sf(pp_atl_s, coords = c("lat_Atl", "long_Atl")) #geocode 'safe' votes in Atlanta
```{r checkcrs}
st_crs(points_atl_s) == st_crs(atl) #check if coordinate reference system is the same of both layers
```
st_crs(points_atl_s) == st_crs(atl) #check if coordinate reference system is the same of both layers
points_atl_s <- st_as_sf(pp_atl_s, coords = c("lat_Atl", "long_Atl")) #geocode 'safe' votes in Atlanta
st_crs(points_atl_s) == st_crs(atl) #check if coordinate reference system is the same of both layers
st_crs(points_atl_s) == st_crs(atl) #check if coordinate reference system is the same of both layers
```{r checkcrs}
st_crs(points_atl_s) == st_crs(atl) #check if coordinate reference system is the same of both layers
```{r changecrs}
st_crs(points_atl_s) <- st_crs(atl)
```{r checkcrs2}
st_crs(points_atl_s) == st_crs(atl) #check if coordinate reference system is the same of both layers
```
ggplot(data = atl) +
geom_sf() +
theme_void() +
coord_sf(xlim = c(-83.7, -85), ylim = c(33.2, 34.5), expand = FALSE) +
geom_sf(data = points_atl_s) #visualise points on the map
ggplot(data = atl) +
geom_sf() +
theme_void() +
coord_sf(xlim = c(-83.7, -85), ylim = c(33.2, 34.5), expand = TRUE) +
geom_sf(data = points_atl_s) #visualise points on the map
ggplot(data = atl) +
geom_sf() +
theme_void() +
coord_sf(xlim = c(-83.7, -85), ylim = c(33.2, 34.5)) +
geom_sf(data = points_atl_s) #visualise points on the map
ggplot(data = atl) +
geom_sf() +
theme_void() +
coord_sf(xlim = c(-84.5, -85), ylim = c(33.2, 34.5)) +
geom_sf(data = points_atl_s) #visualise points on the map
ggplot(data = atl) +
geom_sf() +
theme_void() +
st_crop(xlim = xmin = -83.7, xmax = -85, ymin = 33.2, ymax = 34.4) +
geom_sf(data = points_atl_s) #visualise points on the map
ggplot(data = atl) +
geom_sf() +
theme_void() +
st_crop(xlim = xmin = -83.7, xmax = -85, ymin = 33.2, ymax = 34.4) +
geom_sf(data = points_atl_s) #visualise points on the map
map <- ggplot(data = atl) + geom_sf() + theme_void() +
coord_sf(xlim = c(-83.7, -85), ylim = c(33.2, 34.5), expand = FALSE) #create map
map + geom_point(points_atl_s) #plot map with points
map + points_atl_s #plot map with points
map + geom_point(data = pp_atl_s, aes(x = lat_Atl, y = long_Atl), size = .1) #plot map with points
map <- ggplot(data = atl) + geom_sf() + theme_void() +
coord_sf(xlim = c(-83.8, -84.9), ylim = c(33.3, 34.3), expand = FALSE) #create map
map + geom_point(data = pp_atl_s, aes(x = lat_Atl, y = long_Atl), size = .1) #plot map with points
map <- ggplot(data = atl) + geom_sf() + theme_void() +
coord_sf(xlim = c(-83.9, -84.8), ylim = c(33.5, 34.1), expand = FALSE) #create map
map + geom_point(data = pp_atl_s, aes(x = lat_Atl, y = long_Atl), size = .1) #plot map with points
map <- ggplot(data = atl) + geom_sf() + theme_void() +
coord_sf(xlim = c(-83.9, -84.8), ylim = c(33.5, 34), expand = FALSE) #create map
map + geom_point(data = pp_atl_s, aes(x = lat_Atl, y = long_Atl), size = .1) #plot map with points
map <- ggplot(data = atl) + geom_sf() + theme_void() +
coord_sf(xlim = c(-84, -84.7), ylim = c(33.6, 34), expand = FALSE) #create map
map + geom_point(data = pp_atl_s, aes(x = lat_Atl, y = long_Atl), size = .1) #plot map with points
map <- ggplot(data = atl) + geom_sf() + theme_void() +
coord_sf(xlim = c(-84, -84.7), ylim = c(33.6, 33.9), expand = FALSE) #create map
map + geom_point(data = pp_atl_s, aes(x = lat_Atl, y = long_Atl), size = .1) #plot map with points
map <- ggplot(data = atl) + geom_sf() + theme_void() +
coord_sf(xlim = c(-84, -84.7), ylim = c(33.6, 34), expand = FALSE) #create map
map + geom_point(data = pp_atl_s, aes(x = lat_Atl, y = long_Atl), size = .1) #plot map with points
points_atl_s_nhood <- st_intersection(atl, points_atl_s) %>%
group_by(NAME) %>%
summarise(winscore = mean(win, na.rm = TRUE),
num_votes = n())
View(atl)
points_atl_s_nhood <- st_intersection(atl, points_atl_s) %>%
group_by(TRACT) %>%
summarise(winscore = mean(win, na.rm = TRUE),
num_votes = n())
View(points_atl_s_nhood)
st_geometry(points_atl_s_nhood) <- NULL
atl_pp_wins <- left_join(atl, points_atl_s_nhood, by = c("TRACT" = "TRACT"))
```{r mapwins}
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
theme_void()
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
coord_sf(xlim = c(-84, -84.7), ylim = c(33.6, 34), expand = FALSE) +
theme_void()
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
coord_sf(xlim = c(-83.8, -84.7), ylim = c(33.6, 34), expand = FALSE) +
theme_void()
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
coord_sf(xlim = c(-84, -84.7), ylim = c(33.2, 34), expand = FALSE) +
theme_void()
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
coord_sf(xlim = c(-84, -84.7), ylim = c(33.3, 34), expand = FALSE) +
theme_void()
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
coord_sf(xlim = c(-84, -84.7), ylim = c(33.35, 34), expand = FALSE) +
theme_void()
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
coord_sf(xlim = c(-84, -84.7), ylim = c(33.38, 34), expand = FALSE) +
theme_void()
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
coord_sf(xlim = c(-84, -84.7), ylim = c(33.39, 34), expand = FALSE) +
theme_void()
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
coord_sf(xlim = c(-84, -84.7), ylim = c(33.4, 34), expand = FALSE) +
theme_void()
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
coord_sf(xlim = c(-84, -84.7), ylim = c(33.5, 34), expand = FALSE) +
theme_void()
View(atl_pp_wins)
atl_pp_wins <- atl_pp_wins[!is.na(atl_pp_wins$winscore), ]
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
coord_sf(xlim = c(-84, -84.7), ylim = c(33.5, 34), expand = FALSE) +
theme_void()
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
coord_sf(xlim = c(-84, -84.6), ylim = c(33.5, 34), expand = FALSE) +
theme_void()
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
coord_sf(xlim = c(-84, -84.5), ylim = c(33.5, 34), expand = FALSE) +
theme_void()
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
coord_sf(xlim = c(-84, -84.7), ylim = c(33.5, 34), expand = FALSE) +
theme_void()
summary(atl_pp_wins$winscore) #descriptive statistics of proportion of 'safer' votes per tract
summary(atl_pp_wins$num_votes)
tinytex::install_tinytex()
