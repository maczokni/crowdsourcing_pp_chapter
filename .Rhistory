View(atl)
points_atl_s_nhood <- st_intersection(atl, points_atl_s) %>%
group_by(TRACT) %>%
summarise(winscore = mean(win, na.rm = TRUE),
num_votes = n())
View(points_atl_s_nhood)
st_geometry(points_atl_s_nhood) <- NULL
atl_pp_wins <- left_join(atl, points_atl_s_nhood, by = c("TRACT" = "TRACT"))
```{r mapwins}
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
theme_void()
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
coord_sf(xlim = c(-84, -84.7), ylim = c(33.6, 34), expand = FALSE) +
theme_void()
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
coord_sf(xlim = c(-83.8, -84.7), ylim = c(33.6, 34), expand = FALSE) +
theme_void()
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
coord_sf(xlim = c(-84, -84.7), ylim = c(33.2, 34), expand = FALSE) +
theme_void()
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
coord_sf(xlim = c(-84, -84.7), ylim = c(33.3, 34), expand = FALSE) +
theme_void()
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
coord_sf(xlim = c(-84, -84.7), ylim = c(33.35, 34), expand = FALSE) +
theme_void()
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
coord_sf(xlim = c(-84, -84.7), ylim = c(33.38, 34), expand = FALSE) +
theme_void()
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
coord_sf(xlim = c(-84, -84.7), ylim = c(33.39, 34), expand = FALSE) +
theme_void()
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
coord_sf(xlim = c(-84, -84.7), ylim = c(33.4, 34), expand = FALSE) +
theme_void()
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
coord_sf(xlim = c(-84, -84.7), ylim = c(33.5, 34), expand = FALSE) +
theme_void()
View(atl_pp_wins)
atl_pp_wins <- atl_pp_wins[!is.na(atl_pp_wins$winscore), ]
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
coord_sf(xlim = c(-84, -84.7), ylim = c(33.5, 34), expand = FALSE) +
theme_void()
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
coord_sf(xlim = c(-84, -84.6), ylim = c(33.5, 34), expand = FALSE) +
theme_void()
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
coord_sf(xlim = c(-84, -84.5), ylim = c(33.5, 34), expand = FALSE) +
theme_void()
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
coord_sf(xlim = c(-84, -84.7), ylim = c(33.5, 34), expand = FALSE) +
theme_void()
summary(atl_pp_wins$winscore) #descriptive statistics of proportion of 'safer' votes per tract
summary(atl_pp_wins$num_votes)
tinytex::install_tinytex()
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(ggplot2)
library(sf)
library(ineq)
library(lubridate)
library(tidyr)
library(dplyr)
pp_data <- read.csv('https://ndownloader.figshare.com/files/21739137')
pp_data <- read.csv('https://ndownloader.figshare.com/files/21739137')
pp_data <- read.csv('https://ndownloader.figshare.com/files/21739137')
pp_data <- read.csv('https://ndownloader.figshare.com/files/21739137')
pp_data %>%
group_by(place_name_left) %>%
summarize(Count = n()) %>%
top_n(3)
pp_data %>%
group_by(place_name_right) %>%
summarize(Count = n()) %>%
top_n(3)
pp_data %>%
group_by(study_question) %>%
summarize(Count = n())
pp_data %>%
group_by(choice) %>%
summarize(Count = n()) %>%
top_n(3)
pp_atl <- pp_data[which(pp_data$place_name_right == "Atlanta" |
pp_data$place_name_left  == "Atlanta"), ]
pp_atl <- pp_data %>%
filter(place_name_right == "Atlanta" | place_name_left == "Atlanta")
View(pp_atl)
pp_atl1 <- pp_data[which(pp_data$place_name_right == "Atlanta" |
pp_data$place_name_left  == "Atlanta"), ]
pp_atl2 <- pp_data %>%
filter(place_name_right == "Atlanta" | place_name_left == "Atlanta")
pp_atl_s1 <- pp_atl[ which(pp_atl$study_question == "safer"), ]
pp_atl_s2 <- pp_atl %>%
filter(study_question == "safer")
pp_atl_s %>%
summarise(both_Atlanta = length(place_name_right == "Atlanta" &
place_name_left == "Atlanta"))
pp_atl_s <- pp_atl %>%
filter(study_question == "safer")
pp_atl_s %>%
summarise(both_Atlanta = length(place_name_right == "Atlanta" &
place_name_left == "Atlanta"))
table(pp_atl_s$place_name_right == "Atlanta" &
pp_atl_s$place_name_left  == "Atlanta")
pp_atl_s %>%
filter(place_name_right == "Atlanta", place_name_left == "Atlanta") %>%
.$count # print the count as a result
pp_atl_s %>%
filter(place_name_right == "Atlanta" & place_name_left == "Atlanta") %>%
.$count # print the count as a result
pp_atl_s %>%
filter(place_name_right == "Atlanta" & place_name_left == "Atlanta")
pp_atl_s %>%
filter(place_name_right == "Atlanta" & place_name_left == "Atlanta") %>%
summarize(count = n())
table(pp_atl_s$place_name_right == "Atlanta" &
pp_atl_s$place_name_left  == "Atlanta")
pp_atl_s_dup  <- pp_atl_s[which(pp_atl_s$place_name_right == "Atlanta" &
pp_atl_s$place_name_left  == "Atlanta"), ] #new dataset
pp_atl_s_dup2 <- pp_atl_s_dup #duplicate new dataset
pp_atl_s <- pp_atl_s[!(pp_atl_s$X %in% pp_atl_s_dup$X), ] #delete duplicated from main dataset
pp_atl_s$long_Atl[pp_atl_s$place_name_left == "Atlanta"] <-
pp_atl_s$long_left[pp_atl_s$place_name_left == "Atlanta"]
pp_atl_s$lat_Atl[pp_atl_s$place_name_left  == "Atlanta"] <-
pp_atl_s$lat_left[pp_atl_s$place_name_left  == "Atlanta"]
pp_atl_s$long_Atl[pp_atl_s$place_name_right == "Atlanta"] <-
pp_atl_s$long_right[pp_atl_s$place_name_right == "Atlanta"]
pp_atl_s$lat_Atl[pp_atl_s$place_name_right  == "Atlanta"] <-
pp_atl_s$lat_right[pp_atl_s$place_name_right  == "Atlanta"]
pp_atl_s_dup$long_Atl <- pp_atl_s_dup$long_left
pp_atl_s_dup$lat_Atl  <- pp_atl_s_dup$lat_left
pp_atl_s_dup2$long_Atl <- pp_atl_s_dup2$long_right
pp_atl_s_dup2$lat_Atl  <- pp_atl_s_dup2$lat_right
pp_atl_s$win[pp_atl_s$place_name_left  == "Atlanta" & pp_atl_s$choice == "left"]  <- 1
pp_atl_s$win[pp_atl_s$place_name_left  == "Atlanta" & pp_atl_s$choice == "right"] <- 0
pp_atl_s$win[pp_atl_s$place_name_left  == "Atlanta" & pp_atl_s$choice == "equal"] <- 0
pp_atl_s$win[pp_atl_s$place_name_right == "Atlanta" & pp_atl_s$choice == "right"] <- 1
pp_atl_s$win[pp_atl_s$place_name_right == "Atlanta" & pp_atl_s$choice == "left"]  <- 0
pp_atl_s$win[pp_atl_s$place_name_right == "Atlanta" & pp_atl_s$choice == "equal"] <- 0
pp_atl_s_dup$win[pp_atl_s_dup$choice  == "left"]  <- 1
pp_atl_s_dup$win[pp_atl_s_dup$choice  == "right"] <- 0
pp_atl_s_dup$win[pp_atl_s_dup$choice  == "equal"] <- 0
pp_atl_s_dup2$win[pp_atl_s_dup$choice == "right"] <- 1
pp_atl_s_dup2$win[pp_atl_s_dup$choice == "left"]  <- 0
pp_atl_s_dup2$win[pp_atl_s_dup$choice == "equal"] <- 0
pp_atl_s <- rbind(pp_atl_s, pp_atl_s_dup, pp_atl_s_dup2)
atl <- st_read("http://worldmap.harvard.edu/download/wfs/1824/json?outputFormat=json&service=WFS&request=GetFeature&format_options=charset%3AUTF-8&typename=geonode%3AAtlanta_Census_Tracts_SHL&version=1.0.0")
plot(st_geometry(atl))
points_atl_s <- st_as_sf(pp_atl_s, coords = c("lat_Atl", "long_Atl")) #geocode 'safe' votes in Atlanta
st_crs(points_atl_s) == st_crs(atl) #check if coordinate reference system is the same of both layers
st_crs(points_atl_s) <- st_crs(atl)
st_crs(points_atl_s) == st_crs(atl) #check if coordinate reference system is the same of both layers
map <- ggplot(data = atl) + geom_sf() + theme_void() +
coord_sf(xlim = c(-84.7, -84), ylim = c(33.6, 34),
expand = FALSE) #create map
map + geom_point(data = pp_atl_s, aes(x = lat_Atl, y = long_Atl),
size = .1) #plot map with points
points_atl_s_nhood <- st_intersection(atl, points_atl_s) %>%
group_by(TRACT) %>%
summarise(winscore = mean(win, na.rm = TRUE),
num_votes = n())
st_geometry(points_atl_s_nhood) <- NULL
atl_pp_wins <- left_join(atl, points_atl_s_nhood, by = c("TRACT" = "TRACT"))
atl_pp_wins <- atl_pp_wins[!is.na(atl_pp_wins$winscore), ]
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
coord_sf(xlim = c(-84.7, -84), ylim = c(33.5, 34), expand = FALSE) +
theme_void()
pp_atl_s_dup  <- pp_atl_s %>%
filter(place_name_right == "Atlanta" & place_name_left == "Atlanta") %>%
summarize(count = n())
pp_atl_s_dup  <- pp_atl_s %>%
filter(place_name_right == "Atlanta" & place_name_left == "Atlanta")
pp_atl_s_dup %>%
summarize(count = n())
pp_data %>%
group_by(place_name_left) %>%
summarize(Count = n()) %>%
top_n(3)
pp_data %>%
group_by(place_name_right) %>%
summarize(Count = n()) %>%
top_n(3)
pp_data %>%
group_by(study_question) %>%
summarize(Count = n())
pp_data %>%
group_by(choice) %>%
summarize(Count = n()) %>%
top_n(3)
pp_atl <- pp_data %>%
filter(place_name_right == "Atlanta" | place_name_left == "Atlanta")
pp_atl_s <- pp_atl %>%
filter(study_question == "safer")
pp_atl_s_dup  <- pp_atl_s %>%
filter(place_name_right == "Atlanta" & place_name_left == "Atlanta")
pp_atl_s_dup %>%
summarize(count = n())
pp_atl_s1 <- pp_atl_s %>%
anti_join(pp_atl_s, pp_atl_s_dup, by = "X")
pp_atl <- pp_data %>%
filter(place_name_right == "Atlanta" | place_name_left == "Atlanta")
pp_atl_s <- pp_atl %>%
filter(study_question == "safer")
#create dataset of votes in which both images are from Atlanta
pp_atl_s_dup  <- pp_atl_s %>%
filter(place_name_right == "Atlanta" & place_name_left == "Atlanta")
pp_atl_s_dup %>%
summarize(count = n()) #print the count as a result
pp_atl_s_dup2 <- pp_atl_s_dup #duplicate new dataset
pp_atl_s <- pp_atl_s %>%
anti_join(pp_atl_s, pp_atl_s_dup, by = "X")
pp_atl <- pp_data %>%
filter(place_name_right == "Atlanta" | place_name_left == "Atlanta")
pp_atl_s <- pp_atl %>%
filter(study_question == "safer")
#create dataset of votes in which both images are from Atlanta
pp_atl_s_dup  <- pp_atl_s %>%
filter(place_name_right == "Atlanta" & place_name_left == "Atlanta")
pp_atl_s_dup %>%
summarize(count = n()) #print the count as a result
pp_atl_s_dup2 <- pp_atl_s_dup #duplicate new dataset
pp_atl_s2 <- pp_atl_s %>%
anti_join(pp_atl_s, pp_atl_s_dup, by = "X")
pp_atl_s <- pp_atl_s %>%
anti_join(x = pp_atl_s, y = pp_atl_s_dup, by = "X")
pp_atl <- pp_data %>%
filter(place_name_right == "Atlanta" | place_name_left == "Atlanta")
pp_atl_s <- pp_atl %>%
filter(study_question == "safer")
#create dataset of votes in which both images are from Atlanta
pp_atl_s_dup  <- pp_atl_s %>%
filter(place_name_right == "Atlanta" & place_name_left == "Atlanta")
pp_atl_s_dup %>%
summarize(count = n()) #print the count as a result
pp_atl_s_dup2 <- pp_atl_s_dup #duplicate new dataset
pp_atl_s <- pp_atl_s %>%
anti_join(x = pp_atl_s, y = pp_atl_s_dup, by = "X")
pp_atl <- pp_data %>%
filter(place_name_right == "Atlanta" | place_name_left == "Atlanta")
pp_atl_s <- pp_atl %>%
filter(study_question == "safer")
#create dataset of votes in which both images are from Atlanta
pp_atl_s_dup  <- pp_atl_s %>%
filter(place_name_right == "Atlanta" & place_name_left == "Atlanta")
#print the count as a result
pp_atl_s_dup %>%
summarize(count = n())
pp_atl_s_dup2 <- pp_atl_s_dup #duplicate new dataset
pp_atl_s <- pp_atl_s %>%
anti_join(x = pp_atl_s, y = pp_atl_s_dup, by = "X") #delete duplicated from main dataset
pp_atl_s <- pp_atl_s %>%
filter(place_name_left == "Atlanta", place_name_right == "Atlanta") %>%
select(-long_left, -long_right)
pp_atl_s <- pp_atl_s %>%
filter(
if (place_name_left == "Atlanta") {
long_Atl == long_left &
lat_Atl  == lat_left
}
if (place_name_right == "Atlanta") {
pp_atl_s <- pp_atl_s %>%
filter(
if (place_name_left == "Atlanta") {
long_Atl == long_left &
lat_Atl  == lat_left
} if (place_name_right == "Atlanta") {
pp_atl_s <- pp_atl_s %>%
filter(
if (place_name_left == "Atlanta") {
long_Atl == long_left &
lat_Atl  == lat_left
}
else {
long_Atl == long_right &
lat_Atl  == lat_right
}
)
View(points_atl_s)
View(pp_atl_s)
pp_atl <- pp_data %>%
filter(place_name_right == "Atlanta" | place_name_left == "Atlanta")
pp_atl_s <- pp_atl %>%
filter(study_question == "safer")
#create dataset of votes in which both images are from Atlanta
pp_atl_s_dup  <- pp_atl_s %>%
filter(place_name_right == "Atlanta" & place_name_left == "Atlanta")
#print the count as a result
pp_atl_s_dup %>%
summarize(count = n())
# duplicate new dataset
pp_atl_s_dup2 <- pp_atl_s_dup
# delete duplicated from main dataset
pp_atl_s <- pp_atl_s %>%
anti_join(x = pp_atl_s, y = pp_atl_s_dup, by = "X")
pp_atl_s <- pp_atl_s %>%
filter(
if (place_name_left == "Atlanta") {
long_Atl == long_left &
lat_Atl  == lat_left
}
else {
long_Atl == long_right &
lat_Atl  == lat_right
}
)
pp_atl_s <- pp_atl_s %>%
filter(
if (place_name_left == "Atlanta") {
mutate(long_Atl == long_left,
lat_Atl  == lat_left)
}
else {
mutate(long_Atl == long_right &
lat_Atl  == lat_right)
}
)
pp_atl_s <- pp_atl_s %>%
filter(
if (place_name_left == "Atlanta") {
summarise(long_Atl == long_left,
lat_Atl  == lat_left)
}
else {
summarise(long_Atl == long_right &
lat_Atl  == lat_right)
}
)
pp_atl_s <- pp_atl_s %>%
filter(
if (place_name_left == "Atlanta") {
mutate(long_Atl = long_left,
lat_Atl  = lat_left)
}
else {
mutate(long_Atl = long_right &
lat_Atl  = lat_right)
pp_atl_s <- pp_atl_s %>%
filter(
if (place_name_left == "Atlanta") {
mutate(long_Atl = long_left,
lat_Atl  = lat_left)
}
else {
mutate(long_Atl = long_right,
lat_Atl  = lat_right)
}
)
pp_atl_s <- pp_atl_s %>%
mutate(long_Atl = if_else(place_name_left == "Atlanta", long_left, long_right),
lat_Atl  = if_else(place_name_left == "Atlanta", lat_left , lat_right))
View(pp_atl_s)
pp_atl <- pp_data %>%
filter(place_name_right == "Atlanta" | place_name_left == "Atlanta")
pp_atl_s <- pp_atl %>%
filter(study_question == "safer")
#create dataset of votes in which both images are from Atlanta
pp_atl_s_dup  <- pp_atl_s %>%
filter(place_name_right == "Atlanta" & place_name_left == "Atlanta")
#print the count as a result
pp_atl_s_dup %>%
summarize(count = n())
# duplicate new dataset
pp_atl_s_dup2 <- pp_atl_s_dup
# delete duplicated from main dataset
pp_atl_s <- pp_atl_s %>%
anti_join(x = pp_atl_s, y = pp_atl_s_dup, by = "X")
pp_atl_s <- pp_atl_s %>%
mutate(long_Atl = if_else(place_name_left == "Atlanta", long_left, long_right),
lat_Atl  = if_else(place_name_left == "Atlanta", lat_left , lat_right))
pp_atl_s_dup$long_Atl <- pp_atl_s_dup$long_left
pp_atl_s_dup$lat_Atl  <- pp_atl_s_dup$lat_left
pp_atl_s_dup2$long_Atl <- pp_atl_s_dup2$long_right
pp_atl_s_dup2$lat_Atl  <- pp_atl_s_dup2$lat_right
pp_atl_s$win[pp_atl_s$place_name_left  == "Atlanta" & pp_atl_s$choice == "left"]  <- 1
pp_atl_s$win[pp_atl_s$place_name_left  == "Atlanta" & pp_atl_s$choice == "right"] <- 0
pp_atl_s$win[pp_atl_s$place_name_left  == "Atlanta" & pp_atl_s$choice == "equal"] <- 0
pp_atl_s$win[pp_atl_s$place_name_right == "Atlanta" & pp_atl_s$choice == "right"] <- 1
pp_atl_s$win[pp_atl_s$place_name_right == "Atlanta" & pp_atl_s$choice == "left"]  <- 0
pp_atl_s$win[pp_atl_s$place_name_right == "Atlanta" & pp_atl_s$choice == "equal"] <- 0
pp_atl_s_dup$win[pp_atl_s_dup$choice  == "left"]  <- 1
pp_atl_s_dup$win[pp_atl_s_dup$choice  == "right"] <- 0
pp_atl_s_dup$win[pp_atl_s_dup$choice  == "equal"] <- 0
pp_atl_s_dup2$win[pp_atl_s_dup$choice == "right"] <- 1
pp_atl_s_dup2$win[pp_atl_s_dup$choice == "left"]  <- 0
pp_atl_s_dup2$win[pp_atl_s_dup$choice == "equal"] <- 0
pp_atl_s <- rbind(pp_atl_s, pp_atl_s_dup, pp_atl_s_dup2)
points_atl_s <- st_as_sf(pp_atl_s, coords = c("lat_Atl", "long_Atl")) #geocode 'safe' votes in Atlanta
st_crs(points_atl_s) == st_crs(atl) #check if coordinate reference system is the same of both layers
st_crs(points_atl_s) <- st_crs(atl)
map <- ggplot(data = atl) + geom_sf() + theme_void() +
coord_sf(xlim = c(-84.7, -84), ylim = c(33.6, 34),
expand = FALSE) #create map
map + geom_point(data = pp_atl_s, aes(x = lat_Atl, y = long_Atl),
size = .1) #plot map with points
points_atl_s_nhood <- st_intersection(atl, points_atl_s) %>%
group_by(TRACT) %>%
summarise(winscore = mean(win, na.rm = TRUE),
num_votes = n())
st_geometry(points_atl_s_nhood) <- NULL
atl_pp_wins <- left_join(atl, points_atl_s_nhood, by = c("TRACT" = "TRACT"))
atl_pp_wins <- atl_pp_wins[!is.na(atl_pp_wins$winscore), ]
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
coord_sf(xlim = c(-84.7, -84), ylim = c(33.5, 34), expand = FALSE) +
theme_void()
pp_atl_s_dup <- pp_atl_s_dup %>%
mutate(long_Atl = long_left,
lat_Atl  = lat_left)
pp_atl <- pp_data %>%
filter(place_name_right == "Atlanta" | place_name_left == "Atlanta")
pp_atl_s <- pp_atl %>%
filter(study_question == "safer")
#create dataset of votes in which both images are from Atlanta
pp_atl_s_dup  <- pp_atl_s %>%
filter(place_name_right == "Atlanta" & place_name_left == "Atlanta")
#print the count as a result
pp_atl_s_dup %>%
summarize(count = n())
# duplicate new dataset
pp_atl_s_dup2 <- pp_atl_s_dup
# delete duplicated votes from main dataset
pp_atl_s <- pp_atl_s %>%
anti_join(x = pp_atl_s, y = pp_atl_s_dup, by = "X")
pp_atl_s <- pp_atl_s %>%
mutate(long_Atl = if_else(place_name_left == "Atlanta", long_left, long_right),
lat_Atl  = if_else(place_name_left == "Atlanta", lat_left , lat_right))
pp_atl_s_dup <- pp_atl_s_dup %>%
mutate(long_Atl = long_left,
lat_Atl  = lat_left)
pp_atl_s_dup2 <- pp_atl_s_dup2 %>%
mutate(long_Atl = long_right,
lat_Atl  = lat_right)
pp_atl_s <- pp_atl_s %>%
mutate(win = replace(win, place_name_left  == "Atlanta" & choice == "left", 1),
win = replace(win, place_name_left  == "Atlanta" & choice != "left", 0),
win = replace(win,  place_name_right == "Atlanta" & choice == "right", 1,
win,  place_name_right == "Atlanta" & choice != "right", 0))
pp_atl_s <- pp_atl_s %>%
mutate(win = replace(win, place_name_left  == "Atlanta" & choice == "left", 1),
win = replace(win, place_name_left  == "Atlanta" & choice != "left", 0),
win = replace(win,  place_name_right == "Atlanta" & choice == "right", 1),
win = replace(win,  place_name_right == "Atlanta" & choice != "right", 0))
pp_atl_s <- pp_atl_s %>%
mutate(win = if_else((place_name_left == "Atlanta" & choice == "left") |
(place_name_righ == "Atlanta" & choice == "right"), 1, 0))
pp_atl_s <- pp_atl_s %>%
mutate(win = if_else((place_name_left  == "Atlanta" & choice == "left") |
(place_name_right == "Atlanta" & choice == "right"), 1, 0))
View(pp_atl_s)
pp_atl_s_dup$win[pp_atl_s_dup$choice  == "left"]  <- 1
pp_atl_s_dup$win[pp_atl_s_dup$choice  == "equal"] <- 0
pp_atl_s_dup2$win[pp_atl_s_dup$choice == "right"] <- 1
pp_atl_s_dup2$win[pp_atl_s_dup$choice == "left"]  <- 0
pp_atl_s_dup2$win[pp_atl_s_dup$choice == "equal"] <- 0
pp_atl_s <- rbind(pp_atl_s, pp_atl_s_dup, pp_atl_s_dup2)
points_atl_s <- st_as_sf(pp_atl_s, coords = c("lat_Atl", "long_Atl")) #geocode 'safe' votes in Atlanta
st_crs(points_atl_s) == st_crs(atl) #check if coordinate reference system is the same of both layers
st_crs(points_atl_s) <- st_crs(atl)
map <- ggplot(data = atl) + geom_sf() + theme_void() +
coord_sf(xlim = c(-84.7, -84), ylim = c(33.6, 34),
expand = FALSE) #create map
map + geom_point(data = pp_atl_s, aes(x = lat_Atl, y = long_Atl),
size = .1) #plot map with points
points_atl_s_nhood <- st_intersection(atl, points_atl_s) %>%
group_by(TRACT) %>%
summarise(winscore = mean(win, na.rm = TRUE),
num_votes = n())
st_geometry(points_atl_s_nhood) <- NULL
atl_pp_wins <- left_join(atl, points_atl_s_nhood, by = c("TRACT" = "TRACT"))
atl_pp_wins <- atl_pp_wins[!is.na(atl_pp_wins$winscore), ]
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
coord_sf(xlim = c(-84.7, -84), ylim = c(33.5, 34), expand = FALSE) +
theme_void()
pp_atl_s_dup <- pp_atl_s_dup %>%
mutate(win = if_else(choice == "left", 1, 0))
pp_atl_s_dup2 <- pp_atl_s_dup %>%
mutate(win = if_else(choice == "right", 1, 0))
pp_atl_s <- rbind(pp_atl_s, pp_atl_s_dup, pp_atl_s_dup2)
points_atl_s <- st_as_sf(pp_atl_s, coords = c("lat_Atl", "long_Atl")) #geocode 'safe' votes in Atlanta
st_crs(points_atl_s) == st_crs(atl) #check if coordinate reference system is the same of both layers
st_crs(points_atl_s) <- st_crs(atl)
map <- ggplot(data = atl) + geom_sf() + theme_void() +
coord_sf(xlim = c(-84.7, -84), ylim = c(33.6, 34),
expand = FALSE) #create map
map + geom_point(data = pp_atl_s, aes(x = lat_Atl, y = long_Atl),
size = .1) #plot map with points
points_atl_s_nhood <- st_intersection(atl, points_atl_s) %>%
group_by(TRACT) %>%
summarise(winscore = mean(win, na.rm = TRUE),
num_votes = n())
st_geometry(points_atl_s_nhood) <- NULL
atl_pp_wins <- left_join(atl, points_atl_s_nhood, by = c("TRACT" = "TRACT"))
atl_pp_wins <- atl_pp_wins[!is.na(atl_pp_wins$winscore), ]
ggplot(data = atl_pp_wins) +
geom_sf(aes(fill = winscore)) +
coord_sf(xlim = c(-84.7, -84), ylim = c(33.5, 34), expand = FALSE) +
theme_void()
