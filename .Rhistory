View(pp_data)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(ggplot2)
library(sf)
library(ineq)
library(lubridate)
library(tidyr)
library(dplyr)
library(purrr)
right_freq <- pp_data %>%
group_by(place_name_right) %>% # categories based on cities on the left
summarize(right_count = n()) # count number of units in each category
left_freq <- pp_data %>%
group_by(place_name_left) %>% # categories based on cities on the right
summarize(left_count = n()) # count number of units in each category
total_freq <- left_freq %>%
left_join(., right_freq, by = c("place_name_left" = "place_name_right")) %>%
mutate(total_count = left_count + right_count)
total_freq %>% top_n(3)
pp_data %>%
group_by(choice) %>% # categories based on vote (right, left or equal)
summarize(count = n()) %>% # count number of units in each category
mutate(`%` = round(count/sum(count), 3)*100) %>%
top_n(3) # print 3 most frequent categories
atl_v_others <- pp_atl_s %>%
filter((place_name_right == "Atlanta" & place_name_left != "Atlanta") |   # select where only one side is Atl
(place_name_right != "Atlanta" & place_name_left == "Atlanta")) %>%
mutate(lat_Atl = if_else(place_name_right == "Atlanta", lat_right, lat_left), # get latitude from Atlanta side
long_Atl = if_else(place_name_right == "Atlanta", long_right, long_left), # get longitude from Atlanta side
win = if_else((place_name_left  == "Atlanta" & choice == "left") |
(place_name_right == "Atlanta" & choice == "right"), 1, 0),  # label Atlanta side as win or no win
unique_id = if_else(place_name_right == "Atlanta", right, left))
atl_v_others <- pp_atl_s %>%
# select where only one side is Atl
filter((place_name_right == "Atlanta" & place_name_left != "Atlanta") |
(place_name_right != "Atlanta" & place_name_left == "Atlanta")) %>%
# get latitude and longitude from Atlanta side and label win or no win
mutate(lat_Atl = if_else(place_name_right == "Atlanta", lat_right, lat_left),
long_Atl = if_else(place_name_right == "Atlanta", long_right, long_left),
win = if_else((place_name_left  == "Atlanta" & choice == "left") |
(place_name_right == "Atlanta" & choice == "right"), 1, 0),
unique_id = if_else(place_name_right == "Atlanta", right, left))
pp_atl_s %>%
group_by(unique_id) %>%
summarize(winscore = mean(win, na.rm = TRUE), # calculate proportion of 'safer'
num_votes = n(),  # count number of votes
latitude = first(lat_Atl), longitude = first(long_Atl)) %>% # save latitude and longitude
filter(num_votes >= 20) %>% # filter out pictures with less than 20 votes
arrange(desc(winscore)) %>% # order by proportion of 'safer' responses
filter(row_number() == 1 | row_number() == n()) # print lowest and highest score
pp_s <- pp_data %>%
filter(study_question == "safer") # select votes of 'safer'
atl_v_others <- pp_atl_s %>%
# select where only one side is Atl
filter((place_name_right == "Atlanta" & place_name_left != "Atlanta") |
(place_name_right != "Atlanta" & place_name_left == "Atlanta")) %>%
# get latitude and longitude from Atlanta side and label win or no win
mutate(lat_Atl = if_else(place_name_right == "Atlanta", lat_right, lat_left),
long_Atl = if_else(place_name_right == "Atlanta", long_right, long_left),
win = if_else((place_name_left  == "Atlanta" & choice == "left") |
(place_name_right == "Atlanta" & choice == "right"), 1, 0),
unique_id = if_else(place_name_right == "Atlanta", right, left))
#create dataset from Atlanta images on right side
right_side <- pp_atl_s %>%
filter(place_name_right == "Atlanta" & place_name_left == "Atlanta") %>%
mutate(lat_Atl = lat_right,
long_Atl = long_right,
win = if_else(choice == "right", 1, 0),
unique_id = right)
#create dataset from Atlanta images on left side
left_side <- pp_atl_s %>%
filter(place_name_right == "Atlanta" & place_name_left == "Atlanta") %>%
mutate(lat_Atl = lat_left,
long_Atl = long_left,
win = if_else(choice == "left", 1, 0),
unique_id = left)
pp_atl_s <- rbind(atl_v_others, left_side, right_side)
pp_atl_s %>%
group_by(unique_id) %>%
summarize(winscore = mean(win, na.rm = TRUE), # calculate proportion of 'safer'
num_votes = n(),  # count number of votes
latitude = first(lat_Atl), longitude = first(long_Atl)) %>% # save latitude and longitude
filter(num_votes >= 20) %>% # filter out pictures with less than 20 votes
arrange(desc(winscore)) %>% # order by proportion of 'safer' responses
filter(row_number() == 1 | row_number() == n()) # print lowest and highest score
pp_atl_s %>%
group_by(unique_id) %>%
summarize(winscore = mean(win, na.rm = TRUE), # calculate proportion of 'safer'
num_votes = n(),  # count number of votes
latitude = first(lat_Atl), longitude = first(long_Atl)) %>% # save latitude and longitude
filter(num_votes >= 25) %>% # filter out pictures with less than 20 votes
arrange(desc(winscore)) %>% # order by proportion of 'safer' responses
filter(row_number() == 1 | row_number() == n()) # print lowest and highest score
pp_atl_s %>%
group_by(unique_id) %>%
summarize(winscore = mean(win, na.rm = TRUE), # calculate proportion of 'safer'
num_votes = n(),  # count number of votes
latitude = first(lat_Atl), longitude = first(long_Atl)) %>% # save latitude and longitude
filter(num_votes >= 15) %>% # filter out pictures with less than 20 votes
arrange(desc(winscore)) %>% # order by proportion of 'safer' responses
filter(row_number() == 1 | row_number() == n()) # print lowest and highest score
pp_atl_s %>%
group_by(unique_id) %>%
summarize(winscore = mean(win, na.rm = TRUE), # calculate proportion of 'safer'
num_votes = n(),  # count number of votes
latitude = first(lat_Atl), longitude = first(long_Atl)) %>% # save latitude and longitude
filter(num_votes >= 20) %>% # filter out pictures with less than 20 votes
arrange(desc(winscore)) %>% # order by proportion of 'safer' responses
filter(row_number() == 1 | row_number() == n()) # print lowest and highest score
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(ggplot2)
library(sf)
library(ineq)
library(lubridate)
library(tidyr)
library(dplyr)
library(purrr)
points_atl_s %>%
mutate(geom_text = as.character(st_geometry(geometry))) %>% # spatial data into character
group_by(geom_text) %>% # group votes based on spatial data
summarize(winscore = mean(win, na.rm = TRUE), # calculate proportion of 'safer'
num_votes = n()) %>% # count number of votes
filter(num_votes >= 20) %>% # filter out pictures with less than 20 votes
arrange(desc(winscore)) %>% # order by proportion of 'safer' responses
filter(row_number() == 1 | row_number() == n()) # print lowest and highest score
pp_atl_s %>%
group_by(unique_id) %>%
summarize(winscore = mean(win, na.rm = TRUE), # calculate proportion of 'safer'
num_votes = n(),  # count number of votes
latitude = first(lat_Atl), longitude = first(long_Atl)) %>% # save latitude and longitude
filter(num_votes >= 20) %>% # filter out pictures with less than 20 votes
arrange(desc(winscore)) %>% # order by proportion of 'safer' responses
filter(row_number() == 1 | row_number() == n()) # print lowest and highest score
points_atl_s %>%
mutate(geom_text = as.character(st_geometry(geometry))) %>% # spatial data into character
group_by(geom_text) %>% # group votes based on spatial data
summarize(winscore = mean(win, na.rm = TRUE), # calculate proportion of 'safer'
num_votes = n()) %>% # count number of votes
filter(num_votes >= 15) %>% # filter out pictures with less than 20 votes
arrange(desc(winscore)) %>% # order by proportion of 'safer' responses
filter(row_number() == 1 | row_number() == n()) # print lowest and highest score
right_freq <- pp_data %>%
group_by(place_name_right) %>% # categories based on cities on the left
summarize(right_count = n()) # count number of units in each category
left_freq <- pp_data %>%
group_by(place_name_left) %>% # categories based on cities on the right
summarize(left_count = n()) # count number of units in each category
total_freq <- left_freq %>%
left_join(., right_freq, by = c("place_name_left" = "place_name_right")) %>% # merge
mutate(total_count = left_count + right_count) # create new column
total_freq %>% top_n(3)
pp_data %>%
group_by(study_question) %>% # categories based on study questions
summarize(count = n()) %>% # count number of units in each category
arrange(desc(count))  %>% # print in descending order
filter(!is.na(study_question)) #remove NAs
pp_data %>%
group_by(choice) %>% # categories based on vote (right, left or equal)
summarize(count = n()) %>% # count number of units in each category
mutate(`%` = round(count/sum(count), 3)*100) %>% # compute percentage
top_n(3) # print 3 most frequent categories
pp_s <- pp_data %>%
filter(study_question == "safer") # select votes of 'safer'
# select cases in which the image of the right or left is from Atlanta
pp_atl_s <- pp_s %>%
filter(place_name_right == "Atlanta" | place_name_left == "Atlanta")
atl_v_others <- pp_atl_s %>%
# select where only one side is Atl
filter((place_name_right == "Atlanta" & place_name_left != "Atlanta") |
(place_name_right != "Atlanta" & place_name_left == "Atlanta")) %>%
# get latitude and longitude from Atlanta side and label win or no win
mutate(lat_Atl = if_else(place_name_right == "Atlanta", lat_right, lat_left),
long_Atl = if_else(place_name_right == "Atlanta", long_right, long_left),
win = if_else((place_name_left  == "Atlanta" & choice == "left") |
(place_name_right == "Atlanta" & choice == "right"), 1, 0),
unique_id = if_else(place_name_right == "Atlanta", right, left))
#create dataset from Atlanta images on right side
right_side <- pp_atl_s %>%
filter(place_name_right == "Atlanta" & place_name_left == "Atlanta") %>%
mutate(lat_Atl = lat_right,
long_Atl = long_right,
win = if_else(choice == "right", 1, 0),
unique_id = right)
#create dataset from Atlanta images on left side
left_side <- pp_atl_s %>%
filter(place_name_right == "Atlanta" & place_name_left == "Atlanta") %>%
mutate(lat_Atl = lat_left,
long_Atl = long_left,
win = if_else(choice == "left", 1, 0),
unique_id = left)
pp_atl_s <- rbind(atl_v_others, left_side, right_side)
# select cases in which the image of the right or left is from Atlanta
pp_atl <- pp_data %>%
filter(place_name_right == "Atlanta" | place_name_left == "Atlanta")
pp_atl_s <- pp_atl %>%
filter(study_question == "safer") # select votes of 'safer'
# create dataset in which both images are from Atlanta
pp_atl_s_dup  <- pp_atl_s %>%
filter(place_name_right == "Atlanta" & place_name_left == "Atlanta")
# print the count of votes as a result
pp_atl_s_dup %>%
summarize(count = n())
# duplicate the new dataset
pp_atl_s_dup2 <- pp_atl_s_dup
# delete duplicated votes from main dataset
pp_atl_s <- pp_atl_s %>%
anti_join(x = pp_atl_s, y = pp_atl_s_dup, by = "X")
atl_v_others <- pp_atl_s %>%
# select where only one side is Atlanta
filter((place_name_right == "Atlanta" & place_name_left != "Atlanta") |
(place_name_right != "Atlanta" & place_name_left == "Atlanta")) %>%
# get latitude and longitude from Atlanta side and label win or no win
mutate(lat_Atl   = if_else(place_name_right == "Atlanta", lat_right, lat_left),
long_Atl  = if_else(place_name_right == "Atlanta", long_right, long_left),
win       = if_else((place_name_left == "Atlanta" & choice == "left") |
(place_name_right == "Atlanta" & choice == "right"), 1, 0),
unique_id = if_else(place_name_right == "Atlanta", right, left))
atl_v_others <- pp_atl_s %>%
# select where only one side is Atlanta
filter((place_name_right == "Atlanta" & place_name_left != "Atlanta") |
(place_name_right != "Atlanta" & place_name_left == "Atlanta")) %>%
# get latitude and longitude from Atlanta side and label win or no win
mutate(lat_Atl   = if_else(place_name_right == "Atlanta", lat_right, lat_left),
long_Atl  = if_else(place_name_right == "Atlanta", long_right, long_left),
win       = if_else((place_name_left == "Atlanta" & choice == "left") |
(place_name_right == "Atlanta" & choice == "right"), 1, 0),
unique_id = if_else(place_name_right == "Atlanta", right, left))
#create dataset from Atlanta images on right side
right_side <- pp_atl_s %>%
filter(place_name_right == "Atlanta" & place_name_left == "Atlanta") %>%
mutate(lat_Atl = lat_right,
long_Atl = long_right,
win = if_else(choice == "right", 1, 0),
unique_id = right)
#create dataset from Atlanta images on left side
left_side <- pp_atl_s %>%
filter(place_name_right == "Atlanta" & place_name_left == "Atlanta") %>%
mutate(lat_Atl = lat_left,
long_Atl = long_left,
win = if_else(choice == "left", 1, 0),
unique_id = left)
pp_atl_s <- rbind(atl_v_others, left_side, right_side)
pp_atl_s %>%
group_by(unique_id) %>%
summarize(winscore = mean(win, na.rm = TRUE), # calculate proportion of 'safer'
num_votes = n(),  # count number of votes
latitude = first(lat_Atl), longitude = first(long_Atl)) %>% # save latitude and longitude
filter(num_votes >= 20) %>% # filter out pictures with less than 20 votes
arrange(desc(winscore)) %>% # order by proportion of 'safer' responses
filter(row_number() == 1 | row_number() == n()) # print lowest and highest score
pp_atl_s <- rbind(atl_v_others, left_side, right_side)
pp_atl_s %>%
group_by(unique_id) %>%
summarize(winscore = mean(win, na.rm = TRUE), # calculate proportion of 'safer'
num_votes = n(),  # count number of votes
latitude = first(lat_Atl), longitude = first(long_Atl)) %>% # save latitude and longitude
filter(num_votes >= 20) %>% # filter out pictures with less than 20 votes
arrange(desc(winscore)) %>% # order by proportion of 'safer' responses
filter(row_number() == 1 | row_number() == n()) # print lowest and highest score
pp_s <- pp_data %>%
filter(study_question == "safer") # select votes of 'safer'
# select cases in which the image of the right or left is from Atlanta
pp_atl_s <- pp_s %>%
filter(place_name_right == "Atlanta" | place_name_left == "Atlanta")
atl_v_others <- pp_atl_s %>%
# select where only one side is Atlanta
filter((place_name_right == "Atlanta" & place_name_left != "Atlanta") |
(place_name_right != "Atlanta" & place_name_left == "Atlanta")) %>%
# get latitude and longitude from Atlanta side and label win or no win
mutate(lat_Atl   = if_else(place_name_right == "Atlanta", lat_right, lat_left),
long_Atl  = if_else(place_name_right == "Atlanta", long_right, long_left),
win       = if_else((place_name_left == "Atlanta" & choice == "left") |
(place_name_right == "Atlanta" & choice == "right"), 1, 0),
unique_id = if_else(place_name_right == "Atlanta", right, left))
#create dataset from Atlanta images on right side
right_side <- pp_atl_s %>%
filter(place_name_right == "Atlanta" & place_name_left == "Atlanta") %>%
mutate(lat_Atl = lat_right,
long_Atl = long_right,
win = if_else(choice == "right", 1, 0),
unique_id = right)
#create dataset from Atlanta images on left side
left_side <- pp_atl_s %>%
filter(place_name_right == "Atlanta" & place_name_left == "Atlanta") %>%
mutate(lat_Atl = lat_left,
long_Atl = long_left,
win = if_else(choice == "left", 1, 0),
unique_id = left)
pp_atl_s <- rbind(atl_v_others, left_side, right_side)
pp_atl_s %>%
group_by(unique_id) %>%
summarize(winscore = mean(win, na.rm = TRUE), # calculate proportion of 'safer'
num_votes = n(),  # count number of votes
latitude = first(lat_Atl), longitude = first(long_Atl)) %>% # save latitude and longitude
filter(num_votes >= 20) %>% # filter out pictures with less than 20 votes
arrange(desc(winscore)) %>% # order by proportion of 'safer' responses
filter(row_number() == 1 | row_number() == n()) # print lowest and highest score
pp_atl_s %>%
group_by(unique_id) %>%
summarize(winscore = mean(win, na.rm = TRUE), # calculate proportion of 'safer'
num_votes = n(),  # count number of votes
latitude = first(lat_Atl), longitude = first(long_Atl)) %>% # save latitude and longitude
filter(num_votes >= 25) %>% # filter out pictures with less than 20 votes
arrange(desc(winscore)) %>% # order by proportion of 'safer' responses
filter(row_number() == 1 | row_number() == n()) # print lowest and highest score
pp_atl_s %>%
group_by(unique_id) %>%
summarize(winscore = mean(win, na.rm = TRUE), # calculate proportion of 'safer'
num_votes = n(),  # count number of votes
latitude = first(lat_Atl), longitude = first(long_Atl)) %>% # save latitude and longitude
filter(num_votes >= 22) %>% # filter out pictures with less than 20 votes
arrange(desc(winscore)) %>% # order by proportion of 'safer' responses
filter(row_number() == 1 | row_number() == n()) # print lowest and highest score
pp_atl_s %>%
group_by(unique_id) %>%
summarize(winscore = mean(win, na.rm = TRUE), # calculate proportion of 'safer'
num_votes = n(),  # count number of votes
latitude = first(lat_Atl), longitude = first(long_Atl)) %>% # save latitude and longitude
filter(num_votes >= 25) %>% # filter out pictures with less than 20 votes
arrange(desc(winscore)) %>% # order by proportion of 'safer' responses
filter(row_number() == 1 | row_number() == n()) # print lowest and highest score
total_freq %>% top_n(3)
pp_data %>%
group_by(choice) %>% # categories based on vote (right, left or equal)
summarize(count = n()) %>% # count number of units in each category
mutate(`%` = round(count/sum(count), 3)*100) %>% # compute percentage
top_n(3) # print 3 most frequent categories
pp_data %>%
group_by(choice) %>% # categories based on vote (right, left or equal)
summarize(count = n()) %>% # count number of units in each category
mutate(`%` = round(count/sum(count), 3)*100) %>% # compute percentage
filter(!is.na(choice)) # print 3 most frequent categories
pp_data %>%
group_by(choice) %>% # categories based on vote (right, left or equal)
summarize(count = n()) %>% # count number of units in each category
mutate(`%` = round(count/sum(count), 3)*100) %>% # compute percentage
top_n(3) # print 3 most frequent categories
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(ggplot2)
library(sf)
library(ineq)
library(lubridate)
library(tidyr)
library(dplyr)
library(purrr)
unique_pp_wins <- pp_atl_s %>%
group_by(unique_id) %>% # groups by images IDs
summarize(winscore = mean(win, na.rm = TRUE), # calculate proportion win
num_votes = n(),  # count number of votes
latitude = first(lat_Atl), # save lat
longitude = first(long_Atl)) %>% # save long
filter(num_votes >= 25) %>% # filter out pictures with less than 25 votes
arrange(desc(winscore)) %>% # order by proportion of 'safer' responses
filter(row_number() == 1 | row_number() == n()) # print highest and lowest score
library(dplyr) # load dplyr package
right_freq <- pp_data %>%
group_by(place_name_right) %>% # categories based on cities on the right
summarize(right_count = n()) # count number of units in each category
left_freq <- pp_data %>%
group_by(place_name_left) %>% # categories based on cities on the left
summarize(left_count = n()) # count number of units in each category
total_freq <- left_freq %>%
left_join(., right_freq, by = c("place_name_left" = "place_name_right")) %>% # merge
mutate(total_count = left_count + right_count) # create summatory column
total_freq %>% top_n(3)
pp_data %>%
group_by(study_question) %>% # categories based on study questions
summarize(count = n()) %>% # count number of units in each category
arrange(desc(count))  %>% # print in descending order
filter(!is.na(study_question)) #remove NAs
pp_data %>%
group_by(choice) %>% # categories based on vote (right, left or equal)
summarize(count = n()) %>% # count number of units in each category
mutate(`%` = round(count/sum(count), 3)*100) %>% # compute percentage
top_n(3) # print 3 most frequent categories
pp_s <- pp_data %>%
filter(study_question == "safer") # select votes of safety
# select cases in which the image of the right or left is from Atlanta
pp_atl_s <- pp_s %>%
filter(place_name_right == "Atlanta" | place_name_left == "Atlanta")
atl_v_others <- pp_atl_s %>%
# select where only one image is from Atlanta
filter((place_name_right == "Atlanta" & place_name_left != "Atlanta") |
(place_name_right != "Atlanta" & place_name_left == "Atlanta")) %>%
# get coordinates from Atlanta side, label win, and ID of image
mutate(lat_Atl   = if_else(place_name_right == "Atlanta",
lat_right, lat_left),
long_Atl  = if_else(place_name_right == "Atlanta",
long_right, long_left),
win       = if_else((place_name_left == "Atlanta" &
choice == "left") |
(place_name_right == "Atlanta" &
choice == "right"), 1, 0),
unique_id = if_else(place_name_right == "Atlanta", right, left))
#create dataset from Atlanta images on right side
right_side <- pp_atl_s %>%
filter(place_name_right == "Atlanta" & place_name_left == "Atlanta") %>%
mutate(lat_Atl = lat_right,
long_Atl = long_right,
win = if_else(choice == "right", 1, 0),
unique_id = right)
#create dataset from Atlanta images on left side
left_side <- pp_atl_s %>%
filter(place_name_right == "Atlanta" & place_name_left == "Atlanta") %>%
mutate(lat_Atl = lat_left,
long_Atl = long_left,
win = if_else(choice == "left", 1, 0),
unique_id = left)
pp_atl_s <- rbind(atl_v_others, left_side, right_side)
unique_pp_wins <- pp_atl_s %>%
group_by(unique_id) %>% # groups by images IDs
summarize(winscore = mean(win, na.rm = TRUE), # calculate proportion win
num_votes = n(),  # count number of votes
latitude = first(lat_Atl), # save lat
longitude = first(long_Atl)) %>% # save long
filter(num_votes >= 25) %>% # filter out pictures with less than 25 votes
arrange(desc(winscore)) %>% # order by proportion of 'safer' responses
filter(row_number() == 1 | row_number() == n()) # print highest and lowest score
View(unique_pp_wins)
unique_pp_wins <- pp_atl_s %>%
group_by(unique_id) %>% # groups by images IDs
summarize(winscore = mean(win, na.rm = TRUE), # calculate proportion win
num_votes = n(),  # count number of votes
latitude = first(lat_Atl), # save lat
longitude = first(long_Atl)) %>% # save long
arrange(desc(winscore)) %>% # order by proportion of 'safer' responses
View(unique_pp_wins)
unique_pp_wins <- pp_atl_s %>%
group_by(unique_id) %>% # groups by images IDs
summarize(winscore = mean(win, na.rm = TRUE), # calculate proportion win
num_votes = n(),  # count number of votes
latitude = first(lat_Atl), # save lat
longitude = first(long_Atl)) %>% # save long
arrange(desc(winscore)) %>% # order by proportion of 'safer' responses
unique_pp_wins <- pp_atl_s %>%
group_by(unique_id) %>% # groups by images IDs
summarize(winscore = mean(win, na.rm = TRUE), # calculate proportion win
num_votes = n(),  # count number of votes
latitude = first(lat_Atl), # save lat
longitude = first(long_Atl)) %>% # save long
arrange(desc(winscore)) # order by proportion of 'safer' responses
unique_pp_wins <- pp_atl_s %>%
group_by(unique_id) %>% # groups by images IDs
summarize(winscore = mean(win, na.rm = TRUE), # calculate proportion win
num_votes = n(),  # count number of votes
latitude = first(lat_Atl), # save lat
longitude = first(long_Atl)) %>% # save long
arrange(desc(winscore)) # order by proportion of 'safer' responses
View(unique_pp_wins)
unique_pp_wins %>%
filter(num_votes >= 10) %>% # filter out pictures with less than 25 votes
filter(row_number() == 1 | row_number() == n()) # highest and lowest score
unique_pp_wins %>%
filter(num_votes >= 12) %>% # filter out pictures with less than 25 votes
filter(row_number() == 1 | row_number() == n()) # highest and lowest score
unique_pp_wins %>%
filter(num_votes >= 15) %>% # filter out pictures with less than 25 votes
filter(row_number() == 1 | row_number() == n()) # highest and lowest score
unique_pp_wins %>%
filter(num_votes >= 16) %>% # filter out pictures with less than 25 votes
filter(row_number() == 1 | row_number() == n()) # highest and lowest score
unique_pp_wins %>%
filter(num_votes >= 20) %>% # filter out pictures with less than 25 votes
filter(row_number() == 1 | row_number() == n()) # highest and lowest score
```{r image most least, options(digits=4)}
library(ggplot2)
library(ggplot2)
library(sf)
library(ggplot2)
library(sf)
library(ineq)
library(lubridate)
library(tidyr)
library(dplyr)
library(purrr)
pp_data <- read.csv('https://ndownloader.figshare.com/files/21739137')
library(dplyr) # load dplyr package
right_freq <- pp_data %>%
group_by(place_name_right) %>% # categories based on cities on the right
summarize(right_count = n()) # count number of units in each category
View(right_freq)
